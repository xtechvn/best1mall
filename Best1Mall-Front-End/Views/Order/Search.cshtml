@{
    ViewData["Title"] = "Lịch sử đơn hàng | BestMall";
    Layout = "~/Views/Shared/_AccountManagementLayout.cshtml";
}

@using Best1Mall_Front_End.Models.Orders
@using Best1Mall_Front_End.Utilities
@using Best1Mall_Front_End.Utilities.contants
@{
    Layout = null;
    OrderHistoryResponseModel data = (OrderHistoryResponseModel)ViewBag.Data;
    var static_domain = (string)ViewBag.StaticDomain;

}

@if(data!=null && data.data!=null && data.data_order!=null && data.data.Count>0 && data.data_order.Count > 0)
{
    foreach(var item in data.data)
    {
        // Gán tạm cứng để test nút
        item.OrderStatus = (int)OrderStatusConstants.DONE;             // hoặc CANCELED
        item.PaymentStatus = (int)PaymentStatusConstants.PartiallyPaid;


        var data_order = data.data_order.FirstOrDefault(x => x.order_id == item.Id);
        if (data_order == null || data_order._id == null || data_order._id.Trim() == "")
        {
            data_order = data.data_order.FirstOrDefault(x => x.order_no.Trim().ToLower() == item.OrderNo.Trim().ToLower());
        }
        string orderStatusName = "Tạo mới";
        string paymentStatusName = "Thanh toán thiếu";

        switch (item.OrderStatus)
        {
            case (int)OrderStatusConstants.NEW:
                orderStatusName = "Tạo mới"; break;
            case (int)OrderStatusConstants.PROCESS:
                orderStatusName = "Đang xử lý"; break;
            case (int)OrderStatusConstants.ON_DELIVERY:
                orderStatusName = "Đang vận chuyển"; break;
            case (int)OrderStatusConstants.DELIVERED:
                orderStatusName = "Giao hàng thành công"; break;
            case (int)OrderStatusConstants.DONE:
                orderStatusName = "Hoàn thành"; break;
            case (int)OrderStatusConstants.CANCELED:
                orderStatusName = "Trả hàng/Hoàn tiền"; break;
        }

        switch (item.PaymentStatus)
        {
            case (int)PaymentStatusConstants.Unpaid:
                paymentStatusName = "Chưa thanh toán"; break;
            case (int)PaymentStatusConstants.Paid:
                paymentStatusName = "Đã thanh toán"; break;
            case (int)PaymentStatusConstants.PartiallyPaid:
                paymentStatusName = "Thanh toán thiếu"; break;
        }
        <div class="box-order-detail">

            <nw class="order-history-item" data-id="@item.Id">
                <div class="head-box">
                    <span class="code">Mã đơn hàng: <b>@item.OrderNo</b></span>
                    <span class="status">Tình trạng: <span class="high">@orderStatusName</span></span>
                    @* <span class="status flex gap-2 items-center"> *@
                    @*     <span class="text-sm text-gray-500">Tình trạng:</span> *@
                    @*     <span class="high font-semibold text-blue-600">@orderStatusName</span> *@
                    @*     @if (!string.IsNullOrEmpty(paymentStatusName)) *@
                    @*     { *@
                    @*         <span class="px-2 py-1 rounded-full bg-red-100 text-red-600 text-xs font-medium">@paymentStatusName</span> *@
                    @*     } *@
                    @* </span> *@

                    <a href="/order/detail/@data_order._id" class="btn-seemore">Xem chi tiết</a>
                </div>
                <div class="list-product-order">
                    @{
                        if (data_order != null && data_order.carts != null && data_order.carts.Count>0)
                        {
                            foreach (var cart in data_order.carts)
                            {
                                <div class="item">
                                    <div class="img">
                                        <img src="@StringHelpers.CorrectImage(cart.product.avatar,static_domain)" alt="" />
                                    </div>
                                    <div class="info">
                                        <h3 class="name-product">
                                            @cart.product.name
                                        </h3>
                                        <div class="cat">Phân loại hàng: @StringHelpers.RenderVariationDetail(cart.product.attributes, cart.product.attributes_detail, cart.product.variation_detail)</div>
                                        <div class="flex-quantity">
                                            <span>Giá: @(cart.product.amount.ToString("N0")) đ</span>
                                            <span>Số lượng:@(cart.quanity.ToString("N0")) </span>
                                        </div>
                                        <p class="price">@(cart.total_amount.ToString("N0")) đ</p>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
                <div class="bottom-box">
                    <div class="total-price">Tổng tiền: <span class="number-price text-red-400">@(((double)item.Amount).ToString("N0")) đ</span> </div>
                    <div class="flex flex-wrap md:justify-end justify-center text-center items-center gap-3">
                        @if ( item.OrderStatus==OrderStatus.PROCESS|| item.OrderStatus == OrderStatus.ON_DELIVERY)
                        {
                            <a href="javascript;"
                            class="border border-blue-500 px-6 py-2 text-blue-500 rounded-full cursor-pointer hover:opacity-80 w-full md:w-auto order-index-refund">
                                Trả hàng/Hoàn tiền
                            </a>
                        }
                        @if (item.OrderStatus == OrderStatus.ON_DELIVERY)
                        {
                            <a href="javascript;"
                            class="border border-blue-500 bg-blue-500 px-6 py-2 text-white rounded-full cursor-pointer hover:opacity-80 w-full md:w-auto order-index-received">Đã nhận được hàng</a>
                        }
                        @* Mua lại nếu đơn đã hoàn thành hoặc đã hủy *@
                        @if ((item.OrderStatus == OrderStatus.DONE || item.OrderStatus == OrderStatus.CANCELED)
                       && data_order?.carts?.Count > 0)
                        {
                            var rebuyData = Newtonsoft.Json.JsonConvert.SerializeObject(
                            data_order.carts.Select(x => new
                            {
                                product_id = x.product._id,
                                quanity = x.quanity
                            })
                            );

                            <button class="rebuy-order-btn border-blue-500 bg-blue-500 border px-6 py-2 text-white rounded-full cursor-pointer hover:opacity-80 w-full sm:w-auto"
                                    data-rebuy='@Html.Raw(rebuyData)'>
                                Mua lại
                            </button>
                        }

                        @* Thanh toán lại nếu trạng thái thanh toán là Thanh toán thiếu *@
                        @if (item.PaymentStatus == (int)PaymentStatusConstants.PartiallyPaid)
                        {
                            <a href="javascript:;"
                               class="border border-yellow-500 bg-yellow-500 px-6 py-2 text-white rounded-full cursor-pointer hover:opacity-80 w-full md:w-auto order-index-repay"
                               data-order-id="@data_order._id">
                                Thanh toán lại
                            </a>
                        }

                    </div>
                </div>
            </nw>
        </div>
        }
    }
